<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" 
	xmlns:mvc="http://www.springframework.org/schema/mvc"
	xmlns:context="http://www.springframework.org/schema/context"
	xmlns:aop="http://www.springframework.org/schema/aop" 
	xsi:schemaLocation="http://www.springframework.org/schema/beans
	        http://www.springframework.org/schema/beans/spring-beans.xsd
	        http://www.springframework.org/schema/context
        	http://www.springframework.org/schema/context/spring-context.xsd
        	http://www.springframework.org/schema/aop 
			http://www.springframework.org/schema/aop/spring-aop-4.0.xsd
	        http://www.springframework.org/schema/mvc
	        http://www.springframework.org/schema/mvc/spring-mvc.xsd">
	        
	<mvc:annotation-driven></mvc:annotation-driven>
	
	<mvc:interceptors>
	    <mvc:interceptor>
	        <mvc:mapping path="/*/*"/>
	        <!-- 对特定的请求才进行拦截 -->
	        <bean class="com.cetc.TokenInterceptor"/>
	    </mvc:interceptor>
	</mvc:interceptors>
	
	<!-- 只扫描有这两个注解的组件 -->
	<context:component-scan base-package="com.cetc.controller">
		<context:include-filter type="annotation" expression="org.springframework.web.bind.annotation.RestController"/>
		<context:include-filter type="annotation" expression="org.springframework.stereotype.Controller"/>
		<context:include-filter type="annotation" expression="org.springframework.web.bind.annotation.ControllerAdvice"/>
	</context:component-scan>

	<bean class="org.springframework.web.servlet.view.InternalResourceViewResolver">
		<property name="viewClass"   value="org.springframework.web.servlet.view.JstlView" />
		<property name="contentType" value="text/html" />
		<property name="suffix"      value=".jsp" />
	</bean> 
	
	<bean class="com.cetc.controller.base.CorsConfigurerAdapter"></bean>
	
	<mvc:resources location="/js/" mapping="/js/**"></mvc:resources>
	
	<!-- 启动对@AspectJ注解的支持 -->
	<aop:aspectj-autoproxy/>
	
	<!-- 通知spring使用cglib而不是jdk的来生成代理方法 AOP可以拦截到Controller -->
	<aop:aspectj-autoproxy  proxy-target-class="true" />

</beans>














